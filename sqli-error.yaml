# info to search signature
id: SQLi-Error
type: fuzz
info:
  name: SQLi Error detection
  risk: High

# origin: gonna come from Burp
payloads:
    - "'"
    - '"'
    - "`"	
      
requests:
  - generators:
      # Change exist content type or adding new one
      - Query("[[.original]]{{.payload}}")
      - Path("[[.original]]{{.payload}}", "*")
      
    detections:
      - >-
        RegexSearch("response", "SQL syntax.*MySQL|Warning.*mysql_.*|valid MySQL result|MySqlClient\.|mysqli_error|mysqli_query")

      - >-
        RegexSearch("response", "PostgreSQL.*ERROR|Warning.*\Wpg_.*|valid PostgreSQL resultNpgsql\.")

      - >-
        RegexSearch("response", "Driver.* SQL[\-\_\ ]*Server|OLE DB.* SQL Server|(\W|\A)SQL Server.*Driver|Warning.*mssql_.*|(\W|\A)SQL Server.*[0-9a-fA-F]{8}|(?s)Exception.*\WSystem\.Data\.SqlClient\.|(?s)Exception.*\WRoadhouse\.Cms\.)

      - >-
        RegexSearch("response", "Microsoft Access Driver|JET Database Engine|Access Database Engine")

      - >-
        RegexSearch("response", "ORA-[0-9][0-9][0-9][0-9]|Oracle error|Oracle.*Driver|Warning.*\Woci_.*|Warning.*\Wora_.*")

      - >-
        RegexSearch("response", "CLI Driver.*DB2|DB2 SQL error|\bdb2_\w+\(")

      - >-
        RegexSearch("response", "SQLite/JDBCDriver|SQLite.Exception|System.Data.SQLite.SQLiteException|Warning.*sqlite_.*|Warning.*SQLite3::|SQLITE_ERROR")

      - >-
        RegexSearch("response", "(?i)Warning.*sybase.*|Sybase message|Sybase.*Server message.*")
